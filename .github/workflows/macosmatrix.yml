# This file generates Python wheels for Windows
# (and zip for having Codac and IBEX binaries for several Visual Studio versions)
on:
    push:
        branches: 'master'
        tags: '' # Restrict to blank tags
    pull_request:

jobs:
 vcmatrix:
    runs-on: ${{ matrix.cfg.os }}
    defaults:
        run:
            shell: ${{ matrix.cfg.shell }}
    strategy:
        fail-fast: false
        matrix:
            cfg:
#            - { os: macos-11, shell: bash, arch: x64, runtime: bigsur, cmake_flags: '-fPIC', cpcfg: '-macosx_11_0_x86_64', py_v_maj: 3, py_v_min: 10, desc: 'macOS Big Sur Python 3.10' }
            - { os: macos-10.15, shell: bash, arch: x64, runtime: catalina, cmake_flags: '-fPIC', cpcfg: '-macosx_10_15_x86_64', py_v_maj: 3, py_v_min: 10, desc: 'macOS Catalina Python 3.10' }
            - { os: macos-10.15, shell: bash, arch: x64, runtime: catalina, cmake_flags: '-fPIC', cpcfg: '-macosx_10_15_x86_64', py_v_maj: 3, py_v_min: 9, desc: 'macOS Catalina Python 3.9' }
            - { os: macos-10.15, shell: bash, arch: x64, runtime: catalina, cmake_flags: '-fPIC', cpcfg: '-macosx_10_15_x86_64', py_v_maj: 3, py_v_min: 8, desc: 'macOS Catalina Python 3.8' }
            - { os: macos-10.15, shell: bash, arch: x64, runtime: catalina, cmake_flags: '-fPIC', cpcfg: '-macosx_10_15_x86_64', py_v_maj: 3, py_v_min: 7, desc: 'macOS Catalina Python 3.7' }
            - { os: macos-10.15, shell: bash, arch: x64, runtime: catalina, cmake_flags: '-fPIC', cpcfg: '-macosx_10_15_x86_64', py_v_maj: 3, py_v_min: 6, desc: 'macOS Catalina Python 3.6' }
    name: ${{ matrix.cfg.desc }}
    steps: 
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
        clean: false
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.cfg.py_v_maj }}.${{ matrix.cfg.py_v_min }}
        architecture: ${{ matrix.cfg.arch }}
      if: matrix.cfg.py_v_maj!=''
    - run: |
        python -c "import sys; print(sys.version)"
        echo ${{ matrix.cfg.py_v_maj }}.${{ matrix.cfg.py_v_min }}
      if: matrix.cfg.py_v_maj!=''
    - run: brew install eigen
      if: runner.os=='macOS'
    - run: brew install doxygen ; brew install graphviz ; python -m pip install --upgrade pip ; pip install --upgrade wheel setuptools sphinx breathe sphinx_rtd_theme sphinx-tabs sphinx-issues sphinx-reredirects
      if: runner.os=='macOS'
    - run: git clone -b actions https://github.com/lebarsfa/ibex-lib.git ; cd ibex-lib ; mkdir build ; cd build ; cmake -E env CXXFLAGS="${{ matrix.cfg.cmake_flags }}" CFLAGS="${{ matrix.cfg.cmake_flags }}" cmake ${{ matrix.cfg.cmake_params }} -D CMAKE_INSTALL_PREFIX="../../ibex" .. ; cmake --build . --config Release --target install ; cd ../..
      shell: bash
    - run: |
        mkdir build ; cd build
        cmake -E env CXXFLAGS="${{ matrix.cfg.cmake_flags }}" CFLAGS="${{ matrix.cfg.cmake_flags }}" cmake ${{ matrix.cfg.cmake_params }} -D CMAKE_PREFIX_PATH="ibex" -D CMAKE_INSTALL_PREFIX="../codac" -D BUILD_TESTS=ON -D WITH_PYTHON=ON ..
        cmake --build . --config Release --target install
        cmake --build . --config Release --target test -- ARGS="-V --output-on-failure"
        cmake --build . --config Release --target pip_package ; cp `ls *.whl` ../`ls *.whl | sed "s/py3-none-any/cp${{ matrix.cfg.py_v_maj }}${{ matrix.cfg.py_v_min }}-cp${{ matrix.cfg.py_v_maj }}${{ matrix.cfg.py_v_min }}${{ matrix.cfg.cpcfg }}/"` ; pip install ../*.whl ; python -c "import sys; print(sys.version)" ; python ../examples/tuto/01_getting_started/01_getting_started.py ; pip install numpy ; python -m unittest discover codac.tests
        cd ..
      shell: bash
    - uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "*.whl"
        overwrite: true
        tag_name: autotagname-${{ github.sha }}
      if: (github.event_name != 'pull_request')&&(github.ref_name == 'master')
